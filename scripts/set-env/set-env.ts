import path from 'path'
import { type IConfig } from '@Interfaces'
import { type SetEnv } from '@Types'

const setEnv: SetEnv = async ({ selectedEnv, config, writeFile }) => {
  if (Object.keys(config).includes(selectedEnv)) {
    let result = "# DO NOT TOUCH\n# This file gets generated by 'env:*' scripts\n\n"

    for (const prop in config[selectedEnv]) {
      const key = prop as keyof IConfig[typeof selectedEnv]

      result += prop
      result += '='
      result += config[selectedEnv][key]
      result += '\n'
    }

    try {
      await writeFile(path.join(__dirname, '../../.env'), result)
      return result
    } catch (err) {
      const { message } = err as Error
      throw new Error(message)
    }
  }

  return 'Unknown env'
}

export default setEnv
